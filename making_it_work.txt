# 21-04-2022 @ 14:45: testing (FAILED: make run for single tree first)
# 21-04-2022 @ 14:50: testing (FAILED: TypeError: 'int' object is not subscriptable (line 162))
# 21-04-2022 @ 14:53: testing (FAILED: TypeError: 'int' object is not subscriptable (line 162))
# Likely cause found possibly: not a dict type?
# 21-04-2022 @ 14:55: testing (FAILED: Hypothesis incorrect, type is dict)
# 21-04-2022 @ 14:58: testing (INFO: Found out the error is called from current_node, current_tree should be used here)
# 21-04-2022 @ 15:00: testing (PASS: Error @14:58 fixed)
# 21-04-2022 @ 15:00: testing (ERROR: self.node_paths[current_node] = self.node_paths[self.parents[current_node]].append(current_feature) raises NoneType has no attribute append error)
# 21-04-2022 @ 15:05: testing (INFO: printing shows correct saving of parents, but on node 3 None is introduced in self.node_paths. Unknown origin. ERROR from 15:00 not fixed.)
# 21-04-2022 @ 15:10: testing (INFO: Possible cause found: self.parents call in the append is somehow incorrect)
# 21-04-2022 @ 15:12: testing (INFO: Hypothesis correct, nodeID 3 attempts to obtain the path for nodeID 1, but nodeID 1 is not present within the self.node_paths)
# 21-04-2022 @ 15:15: testing (INFO: Further explanation: feature of nodeID 1 is appended to the path of nodeID 0, which is incorrect. Investigating.)
# 21-04-2022 @ 15:23: testing (INFO: Attempted fix: saving parent path first to variable)
# 21-04-2022 @ 15:24: testing (ERROR: Attempted fix did not yield resuls)
# 21-04-2022 @ 15:27: testing (INFO: Possible cause found: lists are mutable and thus could be shared, attempting using strings)
# 21-04-2022 @ 15:30: testing (FIX: ERROR @15:00 Fixed. Solution: make strings, which are not shared like lists)
# 21-04-2022 @ 15:30: testing (ERROR: Error at nodeID 183: KeyError 'children'. Likely cause: is leaf with leaf value. Error is raised in _add_parent_child. Possible fix: check if 'children' in tree.keys())
# 21-04-2022 @ 15:30: testing (ERROR: Error at nodeID 183: KeyError 'split'. Likely cause: is leaf with leaf value. Error is raised in _add_path_to_node_id. Fix: process leaves. Current workaround: skip leaves.)
# 21-04-2022 @ 15:32: testing (FIX: Fixed at nodeID 183: KeyError 'split'. Current objective: process the leaves.)
# 25-04-2022 @ 10:31: dev (INFO: starting progress to process leaves. Remove if/else and place the leaf processing the _obtain_leaf_scores?)
# 25-04-2022 @ 11:07: testing (PASS: successfully implemented leaves)
# 25-04-2022 @ 11:07: dev (INFO: implementing split values)
# 25-04-2022 @ 11:10: testing (ERROR: '|'.join([item1,item2]) must receive string)
# 25-04-2022 @ 11:19: testing (ERROR: removing uninteresting trees are difficult as the value of node_paths ends with a float. Switching value and split value saving in node_paths)
# 25-04-2022 @ 11:22: testing (ERROR: RuntimeError: dictionary changed size during iteration)
# 25-04-2022 @ 11:25: testing (FIX: Error @11:22 fixed. Solution: make new dictionary that is "final")
# 25-04-2022 @ 11:32: dev (INFO: Added function to obtain the maximum length for all trees (note: do NOT reset this value))
# 25-04-2022 @ 11:34: dev (PASS: Implementation of max length successful)
# 25-04-2022 @ 13:29: dev (INFO: Extending to multiple trees)
# 02-05-2022 @ 09:07: testing (ERROR: AttributeError: 'dict' object has no attribute 'split'. Potential fix: self.final_node_paths to list)
# 02-05-2022 @ 09:09: testing (ERROR: self.final_node_paths to list not possible. Add function to convert to list.)
# 02-05-2022 @ 09:12: testing (ERROR: ValueError: No objects to concatenate. Arrays list is empty.)
# 02-05-2022 @ 09:14: testing (INFO: Call to _convert_dict_to_list was never called.)
# 02-05-2022 @ 09:15: testing (FIX: Fixed errors @9:07 and 9:12)
# 02-05-2022 @ 09:15: testing (PASS: Trees are now exported to dataframe)
# 02-05-2022 @ 09:15: dev (INFO: Remove limiter on number of trees)
# 02-05-2022 @ 09:18: dev (INFO: Implement progress indicator)
# 02-05-2022 @ 09:26: dev (ERROR: Timer doesn't seem to be doing anything)
# 02-05-2022 @ 09:32: dev (INFO: Timer doesn't do anything because all the trees are processed extremely rapidly)
# 02-05-2022 @ 09:32: testing (INFO: Find out what function takes the longest time)
# 02-05-2022 @ 09:34: testing (INFO: String to array takes longest)
